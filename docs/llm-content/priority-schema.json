{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://context-action.dev/schemas/priority.json",
  "title": "Document Priority Configuration",
  "description": "Priority and extraction guidelines for Context-Action framework documentation files",
  "type": "object",
  "required": ["document", "priority", "purpose", "keywords", "extraction"],
  "properties": {
    "document": {
      "type": "object",
      "description": "Basic document identification and metadata",
      "required": ["id", "title", "source_path", "category"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique document identifier (e.g., 'guide-concepts')",
          "pattern": "^[a-z0-9]+(-[a-z0-9]+)*$"
        },
        "title": {
          "type": "string",
          "description": "Human-readable document title for LLM understanding"
        },
        "source_path": {
          "type": "string",
          "description": "Relative path to the original markdown file"
        },
        "category": {
          "type": "string",
          "description": "Document classification for organizational purposes",
          "enum": [
            "guide",
            "api", 
            "concept",
            "example",
            "reference",
            "llms"
          ]
        },
        "subcategory": {
          "type": "string",
          "description": "Optional subcategory for more specific classification"
        }
      }
    },
    "priority": {
      "type": "object",
      "description": "Priority scoring and tier classification for extraction planning",
      "required": ["score", "tier"],
      "properties": {
        "score": {
          "type": "integer",
          "description": "Priority score from 1-100 (higher = more important)",
          "minimum": 1,
          "maximum": 100
        },
        "tier": {
          "type": "string",
          "description": "Priority tier classification",
          "enum": [
            "critical",
            "essential", 
            "important",
            "reference",
            "supplementary"
          ]
        },
        "rationale": {
          "type": "string",
          "description": "Brief explanation of why this priority was assigned"
        }
      }
    },
    "purpose": {
      "type": "object", 
      "description": "Document purpose and role within the framework ecosystem",
      "required": ["primary_goal", "target_audience"],
      "properties": {
        "primary_goal": {
          "type": "string",
          "description": "Main purpose this document serves (what problem it solves)"
        },
        "target_audience": {
          "type": "array",
          "description": "Who should read this document",
          "items": {
            "type": "string",
            "enum": [
              "beginners",
              "intermediate",
              "advanced",
              "framework-users",
              "contributors",
              "llms"
            ]
          },
          "minItems": 1
        },
        "use_cases": {
          "type": "array",
          "description": "Specific scenarios where this document is most valuable",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "type": "array",
          "description": "Other documents that should be read first",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "keywords": {
      "type": "object",
      "description": "Key terms and concepts for consistent extraction",
      "required": ["primary", "technical"],
      "properties": {
        "primary": {
          "type": "array",
          "description": "Core concepts this document covers (max 5)",
          "items": {
            "type": "string"
          },
          "maxItems": 5,
          "minItems": 1
        },
        "technical": {
          "type": "array", 
          "description": "Technical terms, API names, method names, etc.",
          "items": {
            "type": "string"
          }
        },
        "patterns": {
          "type": "array",
          "description": "Design patterns, architectural patterns, or usage patterns",
          "items": {
            "type": "string"
          }
        },
        "avoid": {
          "type": "array",
          "description": "Terms or concepts to avoid or de-emphasize",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "extraction": {
      "type": "object",
      "description": "Guidelines for extracting content at different character limits",
      "required": ["strategy", "character_limits"],
      "properties": {
        "strategy": {
          "type": "string",
          "description": "Overall approach for content extraction",
          "enum": [
            "concept-first",
            "example-first", 
            "api-first",
            "tutorial-first",
            "reference-first"
          ]
        },
        "character_limits": {
          "type": "object",
          "description": "Specific guidelines for each character limit",
          "properties": {
            "minimum": {
              "$ref": "#/definitions/characterLimitGuideline",
              "description": "Quick reference: document links + brief description"
            },
            "origin": {
              "$ref": "#/definitions/characterLimitGuideline", 
              "description": "Complete backup: full original markdown content"
            },
            "100": {
              "$ref": "#/definitions/characterLimitGuideline",
              "description": "Ultra-compressed: one-line concept definition"
            },
            "300": {
              "$ref": "#/definitions/characterLimitGuideline", 
              "description": "Core summary: main concept + basic usage"
            },
            "500": {
              "$ref": "#/definitions/characterLimitGuideline",
              "description": "Medium summary: concept + simple example"
            },
            "1000": {
              "$ref": "#/definitions/characterLimitGuideline",
              "description": "Practical guide: concept + examples + key APIs"
            },
            "2000": {
              "$ref": "#/definitions/characterLimitGuideline",
              "description": "Comprehensive: detailed explanation + multiple examples"
            },
            "3000": {
              "$ref": "#/definitions/characterLimitGuideline",
              "description": "Detailed reference: almost complete information"
            },
            "4000": {
              "$ref": "#/definitions/characterLimitGuideline",
              "description": "Complete reference: all relevant information"
            }
          }
        },
        "emphasis": {
          "type": "object",
          "description": "What to emphasize at each character limit",
          "properties": {
            "must_include": {
              "type": "array",
              "description": "Concepts that must be included in any extraction",
              "items": {
                "type": "string"
              }
            },
            "nice_to_have": {
              "type": "array",
              "description": "Additional concepts to include if space allows",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "quality": {
      "type": "object",
      "description": "Quality standards and validation criteria",
      "properties": {
        "completeness_threshold": {
          "type": "number",
          "description": "Minimum percentage of key concepts that must be covered",
          "minimum": 0.5,
          "maximum": 1.0,
          "default": 0.8
        },
        "code_examples_required": {
          "type": "boolean",
          "description": "Whether code examples are essential for this document",
          "default": false
        },
        "consistency_checks": {
          "type": "array",
          "description": "Specific items to validate for consistency",
          "items": {
            "type": "string",
            "enum": [
              "terminology",
              "code_style",
              "naming_conventions",
              "pattern_usage",
              "api_signatures"
            ]
          }
        }
      }
    },
    "metadata": {
      "type": "object",
      "description": "Administrative metadata for tracking and management",
      "properties": {
        "created": {
          "type": "string",
          "format": "date",
          "description": "Date this priority file was created"
        },
        "updated": {
          "type": "string", 
          "format": "date",
          "description": "Date this priority file was last updated"
        },
        "version": {
          "type": "string",
          "description": "Version of this priority configuration",
          "default": "1.0"
        },
        "original_size": {
          "type": "integer",
          "description": "Size of the original document in characters",
          "minimum": 0
        },
        "estimated_extraction_time": {
          "type": "object",
          "description": "Estimated time to complete extractions",
          "properties": {
            "minimum": {
              "type": "string",
              "description": "Estimated time for minimum file (e.g., '10 minutes')"
            },
            "origin": {
              "type": "string",
              "description": "Estimated time for origin file (usually automatic)"
            },
            "300": {
              "type": "string",
              "description": "Estimated time for 300-char extraction (e.g., '15 minutes')"
            },
            "1000": {
              "type": "string", 
              "description": "Estimated time for 1000-char extraction"
            },
            "2000": {
              "type": "string",
              "description": "Estimated time for 2000-char extraction"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "characterLimitGuideline": {
      "type": "object",
      "description": "Specific extraction guideline for a character limit",
      "properties": {
        "focus": {
          "type": "string",
          "description": "Primary focus for this character limit"
        },
        "structure": {
          "type": "string", 
          "description": "Recommended structure for the extracted content"
        },
        "must_include": {
          "type": "array",
          "description": "Elements that must be included",
          "items": {
            "type": "string"
          }
        },
        "avoid": {
          "type": "array",
          "description": "Elements to avoid at this character limit",
          "items": {
            "type": "string"
          }
        },
        "example_structure": {
          "type": "string",
          "description": "Example of how content should be structured"
        }
      }
    }
  }
}