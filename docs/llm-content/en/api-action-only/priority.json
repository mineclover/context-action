{
  "$schema": "../../priority-schema.json",
  "document": {
    "id": "api-action-only",
    "title": "Action Only Methods",
    "source_path": "api/action-only.md", 
    "category": "api",
    "subcategory": "action-patterns"
  },
  "priority": {
    "score": 85,
    "tier": "essential",
    "rationale": "Core API for Action Only Pattern - one of two main framework patterns"
  },
  "purpose": {
    "primary_goal": "Document createActionContext API and Action Only Pattern implementation",
    "target_audience": ["intermediate", "framework-users", "llms"],
    "use_cases": [
      "Implementing pure action dispatching",
      "Command pattern implementations", 
      "Event-driven architectures",
      "API reference lookup"
    ],
    "dependencies": ["guide-concepts"]
  },
  "keywords": {
    "primary": [
      "createActionContext",
      "Action Only Pattern",
      "useActionDispatch", 
      "useActionHandler",
      "ActionProvider"
    ],
    "technical": [
      "ActionPayloadMap",
      "ActionDispatch",
      "ActionHandler",
      "PipelineController",
      "HandlerResult"
    ],
    "patterns": [
      "Action Only Pattern",
      "Command Pattern",
      "Event System Pattern",
      "Handler Registration Pattern"
    ],
    "avoid": [
      "Store management", 
      "State subscription",
      "Declarative Store Pattern"
    ]
  },
  "extraction": {
    "strategy": "api-first",
    "character_limits": {
      "100": {
        "focus": "Main API function and purpose",
        "structure": "createActionContext function definition",
        "must_include": ["createActionContext", "action dispatching"],
        "avoid": ["detailed examples", "all parameters"],
        "example_structure": "createActionContext: Pure action dispatching without state management"
      },
      "300": {
        "focus": "Core API with basic usage pattern",
        "structure": "API signature + basic usage + key hooks",
        "must_include": ["createActionContext", "useActionDispatch", "useActionHandler", "basic example"],
        "avoid": ["complex examples", "error handling"],
        "example_structure": "API → Basic usage → Key hooks → Simple example"
      },
      "1000": {
        "focus": "Complete API with practical examples",
        "structure": "Full API + usage pattern + handler registration + example",
        "must_include": ["complete API", "handler pattern", "practical example", "provider setup"],
        "avoid": ["advanced features", "performance considerations"],
        "example_structure": "Complete API → Handler pattern → Full example → Provider setup"
      },
      "2000": {
        "focus": "Comprehensive API reference with advanced usage",
        "structure": "Full API + multiple examples + error handling + best practices",
        "must_include": ["complete API reference", "multiple examples", "error handling", "best practices"],
        "avoid": ["other patterns", "unrelated APIs"],
        "example_structure": "Full API reference → Multiple examples → Error handling → Best practices"
      }
    },
    "emphasis": {
      "must_include": [
        "createActionContext function",
        "useActionDispatch hook", 
        "useActionHandler hook",
        "Action Only Pattern concept",
        "Provider component"
      ],
      "nice_to_have": [
        "TypeScript signatures",
        "Error handling patterns",
        "Performance considerations"
      ]
    }
  },
  "quality": {
    "completeness_threshold": 0.85,
    "code_examples_required": true,
    "consistency_checks": [
      "api_signatures",
      "naming_conventions",
      "pattern_usage"
    ]
  },
  "metadata": {
    "created": "2025-08-14",
    "version": "1.0",
    "original_size": 12629,
    "estimated_extraction_time": {
      "300": "25 minutes",
      "1000": "50 minutes",
      "2000": "75 minutes"
    }
  }
}