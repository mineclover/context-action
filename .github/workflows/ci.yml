name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
          
      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: |
          if pnpm install --frozen-lockfile 2>/dev/null; then
            echo "‚úÖ Installed with frozen lockfile"
          else
            echo "‚ö†Ô∏è Frozen lockfile failed, trying without frozen lockfile"
            pnpm install --no-frozen-lockfile
          fi
          
      - name: Build packages
        run: pnpm build
        
      - name: Lint
        run: pnpm lint
        
      - name: Type check
        run: pnpm type-check
        
      - name: Run tests
        run: pnpm test
        continue-on-error: true
        
      - name: Build example app
        run: pnpm example:build
        continue-on-error: true

  size-check:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile
        
      - name: Build packages
        run: pnpm build
        
      - name: Check bundle sizes
        run: |
          echo "üì¶ Bundle Size Report"
          echo "===================="
          
          for package in packages/*/dist/index.js; do
            if [ -f "$package" ]; then
              size=$(ls -lah "$package" | awk '{print $5}')
              gzip_size=$(gzip -c "$package" | wc -c | awk '{print $1}')
              package_name=$(echo "$package" | sed 's|packages/||' | sed 's|/dist/index.js||')
              
              echo "üìã $package_name:"
              echo "   - Raw: $size"
              echo "   - Gzipped: ${gzip_size} bytes"
              echo ""
            fi
          done