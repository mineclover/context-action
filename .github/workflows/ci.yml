name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        run_install: false
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: |
        if [ -f pnpm-lock.yaml ]; then
          pnpm install --frozen-lockfile
        else
          pnpm install --no-frozen-lockfile
        fi

    - name: Lint
      run: pnpm lint

    - name: Type check
      run: pnpm type-check

    - name: Run tests
      run: pnpm test:all

    - name: Build packages
      run: pnpm build:all

    - name: Check bundle sizes
      run: pnpm check:size

    - name: Build documentation (test)
      run: pnpm docs:build
      
    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: |
          packages/*/coverage/
        retention-days: 30
      continue-on-error: true

  docs-preview:
    name: Documentation Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        run_install: false
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: |
        if [ -f pnpm-lock.yaml ]; then
          pnpm install --frozen-lockfile
        else
          pnpm install --no-frozen-lockfile
        fi

    - name: Build packages
      run: pnpm build:all

    - name: Build documentation
      run: pnpm docs:build
      
    - name: Validate documentation
      run: |
        echo "üîç Validating documentation structure..."
        
        # Check main files
        if [ ! -f "docs/.vitepress/dist/index.html" ]; then
          echo "‚ùå Main index.html not found"
          exit 1
        fi
        
        if [ ! -f "docs/.vitepress/dist/ko/index.html" ]; then
          echo "‚ùå Korean index.html not found"
          exit 1
        fi
        
        # Check API documentation
        if [ ! -d "docs/.vitepress/dist/api" ]; then
          echo "‚ùå API documentation not found"
          exit 1
        fi
        
        if [ ! -d "docs/.vitepress/dist/ko/api" ]; then
          echo "‚ùå Korean API documentation not found"
          exit 1
        fi
        
        # Check guide pages
        if [ ! -f "docs/.vitepress/dist/guide/getting-started.html" ]; then
          echo "‚ùå Getting started guide not found"
          exit 1
        fi
        
        if [ ! -f "docs/.vitepress/dist/ko/guide/getting-started.html" ]; then
          echo "‚ùå Korean getting started guide not found"
          exit 1
        fi
        
        echo "‚úÖ Documentation structure is valid!"
        
        # Show file sizes
        echo "üìä Documentation sizes:"
        du -sh docs/.vitepress/dist/
        find docs/.vitepress/dist/ -name "*.html" | wc -l | xargs echo "HTML files:"
        
    - name: Upload documentation preview
      uses: actions/upload-artifact@v3
      with:
        name: docs-preview-${{ github.event.number }}
        path: docs/.vitepress/dist/
        retention-days: 7
        
    - name: Comment PR
      uses: actions/github-script@v6
      with:
        script: |
          const { owner, repo, number } = context.issue;
          const artifactName = `docs-preview-${number}`;
          
          const comment = `## üìñ Documentation Preview
          
          The documentation has been built successfully for this PR!
          
          **Preview Details:**
          - ‚úÖ English documentation
          - ‚úÖ Korean (ÌïúÍµ≠Ïñ¥) documentation  
          - ‚úÖ API reference
          - ‚úÖ Examples and guides
          
          You can download the preview artifact named \`${artifactName}\` from the [workflow run](${context.payload.pull_request.html_url}/checks) to view the built documentation locally.
          
          **Files generated:**
          - Main site: \`index.html\`
          - Korean site: \`ko/index.html\`
          - API docs: \`api/\` and \`ko/api/\`
          - Guides: \`guide/\` and \`ko/guide/\`
          `;
          
          github.rest.issues.createComment({
            owner,
            repo,
            issue_number: number,
            body: comment
          });
      continue-on-error: true