{
  "metadata": {
    "generated_at": "2025-08-01T06:07:57.098Z",
    "generated_date": "2025. 8. 1.",
    "generated_time": "오후 3:07:57"
  },
  "overview": {
    "total_glossary_terms": 40,
    "mapped_terms": 3,
    "implementation_rate": 8,
    "files_scanned": 82,
    "files_with_tags": 5,
    "categories_count": 2
  },
  "quality": {
    "errors": 0,
    "warnings": 39,
    "validation_status": "PASS"
  },
  "categories": {
    "core-concepts": {
      "name": "핵심 개념",
      "icon": "🎯",
      "implemented": 2,
      "total": 26,
      "missing": 12,
      "implementation_rate": 8,
      "status": {
        "text": "시작단계",
        "color": "red",
        "emoji": "🔴"
      },
      "priority_terms": [
        {
          "term": "action-pipeline-system",
          "name": "Action Pipeline System",
          "category": "core-concepts",
          "reason": "no_implementation",
          "suggestions": [
            "action-pipeline-system을 구현하는 함수/클래스/인터페이스에 @implements action-pipeline-system 태그 추가",
            "용어집 정의에 맞는 구체적인 구현 작성"
          ]
        },
        {
          "term": "store-integration-pattern",
          "name": "Store Integration Pattern",
          "category": "core-concepts",
          "reason": "no_implementation",
          "suggestions": [
            "store-integration-pattern을 구현하는 함수/클래스/인터페이스에 @implements store-integration-pattern 태그 추가",
            "용어집 정의에 맞는 구체적인 구현 작성"
          ]
        },
        {
          "term": "store-registry",
          "name": "Store Registry",
          "category": "core-concepts",
          "reason": "no_implementation",
          "suggestions": [
            "store-registry을 구현하는 함수/클래스/인터페이스에 @implements store-registry 태그 추가",
            "용어집 정의에 맞는 구체적인 구현 작성"
          ]
        }
      ],
      "recent_implementations": [
        "action-handler",
        "pipeline-controller"
      ]
    },
    "architecture-terms": {
      "name": "아키텍처",
      "icon": "🏗️",
      "implemented": 0,
      "total": 9,
      "missing": 6,
      "implementation_rate": 0,
      "status": {
        "text": "시작단계",
        "color": "red",
        "emoji": "🔴"
      },
      "priority_terms": [
        {
          "term": "mvvm-pattern",
          "name": "MVVM Pattern",
          "category": "architecture-terms",
          "reason": "no_implementation",
          "suggestions": [
            "mvvm-pattern을 구현하는 함수/클래스/인터페이스에 @implements mvvm-pattern 태그 추가",
            "용어집 정의에 맞는 구체적인 구현 작성"
          ]
        },
        {
          "term": "view-layer",
          "name": "View Layer",
          "category": "architecture-terms",
          "reason": "no_implementation",
          "suggestions": [
            "view-layer을 구현하는 함수/클래스/인터페이스에 @implements view-layer 태그 추가",
            "용어집 정의에 맞는 구체적인 구현 작성"
          ]
        },
        {
          "term": "viewmodel-layer",
          "name": "ViewModel Layer",
          "category": "architecture-terms",
          "reason": "no_implementation",
          "suggestions": [
            "viewmodel-layer을 구현하는 함수/클래스/인터페이스에 @implements viewmodel-layer 태그 추가",
            "용어집 정의에 맞는 구체적인 구현 작성"
          ]
        }
      ],
      "recent_implementations": []
    },
    "api-terms": {
      "name": "API 용어",
      "icon": "🔌",
      "implemented": 1,
      "total": 4,
      "missing": 0,
      "implementation_rate": 25,
      "status": {
        "text": "개선필요",
        "color": "orange",
        "emoji": "🟠"
      },
      "priority_terms": [],
      "recent_implementations": [
        "action-payload-map"
      ]
    },
    "naming-conventions": {
      "name": "네이밍 규칙",
      "icon": "📝",
      "implemented": 0,
      "total": 10,
      "missing": 7,
      "implementation_rate": 0,
      "status": {
        "text": "시작단계",
        "color": "red",
        "emoji": "🔴"
      },
      "priority_terms": [
        {
          "term": "class-naming",
          "name": "Class Naming",
          "category": "naming-conventions",
          "reason": "no_implementation",
          "suggestions": [
            "class-naming을 구현하는 함수/클래스/인터페이스에 @implements class-naming 태그 추가",
            "용어집 정의에 맞는 구체적인 구현 작성"
          ]
        },
        {
          "term": "interface-naming",
          "name": "Interface Naming",
          "category": "naming-conventions",
          "reason": "no_implementation",
          "suggestions": [
            "interface-naming을 구현하는 함수/클래스/인터페이스에 @implements interface-naming 태그 추가",
            "용어집 정의에 맞는 구체적인 구현 작성"
          ]
        },
        {
          "term": "function-naming",
          "name": "Function Naming",
          "category": "naming-conventions",
          "reason": "no_implementation",
          "suggestions": [
            "function-naming을 구현하는 함수/클래스/인터페이스에 @implements function-naming 태그 추가",
            "용어집 정의에 맞는 구체적인 구현 작성"
          ]
        }
      ],
      "recent_implementations": []
    }
  },
  "recent_implementations": [
    {
      "term": "pipeline-controller",
      "name": "definitions",
      "file": "packages/core/src/types.ts",
      "type": "type",
      "date": "2025. 8. 1."
    },
    {
      "term": "action-payload-map",
      "name": "definitions",
      "file": "packages/core/src/types.ts",
      "type": "type",
      "date": "2025. 8. 1."
    },
    {
      "term": "action-handler",
      "name": "DebounceOptions",
      "file": "example/src/hooks/useActionDebouncer.ts",
      "type": "interface",
      "date": "2025. 8. 1."
    },
    {
      "term": "action-handler",
      "name": "BlockOptions",
      "file": "example/src/hooks/useActionBlock.ts",
      "type": "interface",
      "date": "2025. 8. 1."
    },
    {
      "term": "action-handler",
      "name": "ThrottleOptions",
      "file": "example/src/hooks/useActionThrottle.ts",
      "type": "interface",
      "date": "2025. 8. 1."
    }
  ],
  "priority_todos": [
    {
      "priority": "HIGH",
      "type": "IMPLEMENT_TERM",
      "title": "\"ActionRegister\" 구현",
      "description": "ActionRegister 클래스에 @implements actionregister 태그 추가",
      "category": "core-concepts",
      "effort": "High",
      "files_affected": 1
    },
    {
      "priority": "HIGH",
      "type": "IMPLEMENT_TERM",
      "title": "\"StoreProvider\" 구현",
      "description": "StoreProvider 컴포넌트에 @implements storeprovider 태그 추가",
      "category": "core-concepts",
      "effort": "High",
      "files_affected": 1
    },
    {
      "priority": "HIGH",
      "type": "IMPLEMENT_TERM",
      "title": "\"ActionProvider\" 구현",
      "description": "actionprovider을 구현하는 함수/클래스/인터페이스에 @implements actionprovider 태그 추가",
      "category": "core-concepts",
      "effort": "High",
      "files_affected": 1
    },
    {
      "priority": "HIGH",
      "type": "IMPLEMENT_TERM",
      "title": "\"Store Hooks\" 구현",
      "description": "useStoreValue 훅에 @implements store-hooks 태그 추가",
      "category": "core-concepts",
      "effort": "High",
      "files_affected": 1
    }
  ],
  "trends": {
    "implementation_velocity": "+ 3 용어/주",
    "most_active_category": "core-concepts",
    "completion_estimate": "6개월 이상"
  },
  "raw_data": {
    "mappings_summary": {
      "totalTerms": 0,
      "mappedTerms": 3,
      "unmappedTerms": 0,
      "totalFiles": 82,
      "taggedFiles": 5,
      "lastUpdate": "2025-08-01T06:07:56.291Z"
    },
    "validation_summary": {
      "errors": 0,
      "warnings": 39,
      "totalIssues": 39,
      "glossaryTerms": 40,
      "mappedTerms": 3,
      "implementationRate": 8
    },
    "missing_analysis_summary": {
      "totalGlossaryTerms": 40,
      "totalMappedTerms": 3,
      "implementationRate": 8,
      "missingFromCode": 37,
      "missingFromGlossary": 0,
      "partialImplementations": 0
    }
  }
}