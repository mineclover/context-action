// Auto-generated API sidebar configuration
// This file is generated by @context-action/typedoc-vitepress-sync

// Locale path utility
function createLocalePath(locale: string, path: string): string {
  return `/${locale}${path}`
}

// Type definitions
type SidebarItem = {
  text: string
  link: string
}

type SidebarSection = {
  text: string
  collapsed: boolean
  items: SidebarItem[]
}

// API structure (auto-generated)
export const API_STRUCTURE = {
  "test": {
    "text": "Test API",
    "items": []
  }
}

// Sidebar section factory
function createSidebarSection(locale: string, section: any): SidebarSection {
  return {
    text: section.text,
    collapsed: false,
    items: section.items.map((item: any) => ({
      text: item.text,
      link: createLocalePath(locale, item.path)
    }))
  }
}

// Sidebar generators for different locales
export function sidebarApiEn() {
  return Object.values(API_STRUCTURE).map(section => 
    createSidebarSection('en', section)
  )
}

export function sidebarApiKo() {
  return Object.values(API_STRUCTURE).map(section => 
    createSidebarSection('ko', section)
  )
}

// Utility functions
export function getSidebarForLocale(locale: string) {
  switch (locale) {
    case 'ko':
      return sidebarApiKo()
    case 'en':
    default:
      return sidebarApiEn()
  }
}

export function getApiPackages(): string[] {
  return Object.keys(API_STRUCTURE)
}

export function getApiItemsForPackage(packageName: string): any[] {
  return API_STRUCTURE[packageName]?.items || []
}
